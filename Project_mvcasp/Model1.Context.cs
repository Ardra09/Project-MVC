//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_mvcasp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MVCProjectEntities2 : DbContext
    {
        public MVCProjectEntities2()
            : base("name=MVCProjectEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CompanyReg_tab> CompanyReg_tab { get; set; }
        public DbSet<CompanyVacancy_tab> CompanyVacancy_tab { get; set; }
        public DbSet<Login_tab> Login_tab { get; set; }
        public DbSet<UserApplication_tab> UserApplication_tab { get; set; }
        public DbSet<UserReg_tab> UserReg_tab { get; set; }
    
        public virtual int sp_Company_Vaccancy(Nullable<int> cid, string jtitle, string jdesc, string skills, string exp, string loc, string srange, string jtype, Nullable<System.DateTime> postdate, Nullable<System.DateTime> lastdate, string status)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var jtitleParameter = jtitle != null ?
                new ObjectParameter("jtitle", jtitle) :
                new ObjectParameter("jtitle", typeof(string));
    
            var jdescParameter = jdesc != null ?
                new ObjectParameter("jdesc", jdesc) :
                new ObjectParameter("jdesc", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var srangeParameter = srange != null ?
                new ObjectParameter("srange", srange) :
                new ObjectParameter("srange", typeof(string));
    
            var jtypeParameter = jtype != null ?
                new ObjectParameter("jtype", jtype) :
                new ObjectParameter("jtype", typeof(string));
    
            var postdateParameter = postdate.HasValue ?
                new ObjectParameter("postdate", postdate) :
                new ObjectParameter("postdate", typeof(System.DateTime));
    
            var lastdateParameter = lastdate.HasValue ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Company_Vaccancy", cidParameter, jtitleParameter, jdescParameter, skillsParameter, expParameter, locParameter, srangeParameter, jtypeParameter, postdateParameter, lastdateParameter, statusParameter);
        }
    
        public virtual int sp_CompanyReg(Nullable<int> aid, string ana, string aemail, string phone, string loc, string web)
        {
            var aidParameter = aid.HasValue ?
                new ObjectParameter("aid", aid) :
                new ObjectParameter("aid", typeof(int));
    
            var anaParameter = ana != null ?
                new ObjectParameter("ana", ana) :
                new ObjectParameter("ana", typeof(string));
    
            var aemailParameter = aemail != null ?
                new ObjectParameter("aemail", aemail) :
                new ObjectParameter("aemail", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var locParameter = loc != null ?
                new ObjectParameter("loc", loc) :
                new ObjectParameter("loc", typeof(string));
    
            var webParameter = web != null ?
                new ObjectParameter("web", web) :
                new ObjectParameter("web", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyReg", aidParameter, anaParameter, aemailParameter, phoneParameter, locParameter, webParameter);
        }
    
        public virtual int sp_jobsearches(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearches", qryParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_LoginCountId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_LoginCountId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_LoginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_LoginId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_LoginInsert(Nullable<int> rid, string una, string pwd, string logtype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var logtypeParameter = logtype != null ?
                new ObjectParameter("logtype", logtype) :
                new ObjectParameter("logtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_LoginInsert", ridParameter, unaParameter, pwdParameter, logtypeParameter);
        }
    
        public virtual ObjectResult<string> sp_LoginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_LoginType", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_UserApplication(Nullable<int> jid, Nullable<int> uid, Nullable<System.DateTime> applndate, string resume, string status)
        {
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var applndateParameter = applndate.HasValue ?
                new ObjectParameter("applndate", applndate) :
                new ObjectParameter("applndate", typeof(System.DateTime));
    
            var resumeParameter = resume != null ?
                new ObjectParameter("resume", resume) :
                new ObjectParameter("resume", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserApplication", jidParameter, uidParameter, applndateParameter, resumeParameter, statusParameter);
        }
    
        public virtual int sp_UserReg(Nullable<int> uid, string na, Nullable<int> ag, string addr, string em, string ph, string loca, string gen, string qual, string skills, Nullable<int> exp, string photo)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var locaParameter = loca != null ?
                new ObjectParameter("loca", loca) :
                new ObjectParameter("loca", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var expParameter = exp.HasValue ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(int));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserReg", uidParameter, naParameter, agParameter, addrParameter, emParameter, phParameter, locaParameter, genParameter, qualParameter, skillsParameter, expParameter, photoParameter);
        }
    }
}
